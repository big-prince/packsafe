import mongoose, { Schema, Document } from 'mongoose';

export interface IVulnerability extends Document {
  vulnerabilityId: string;
  title: string;
  description: string;
  severity: 'low' | 'moderate' | 'high' | 'critical';
  packageName: string;
  affectedVersions: string;
  fixedIn?: string;
  cwe?: string[];
  cvss?: number;
  createdAt: Date;
  updatedAt: Date;
}

const VulnerabilitySchema: Schema = new Schema(
  {
    vulnerabilityId: {
      type: String,
      required: true,
      unique: true,
      trim: true,
    },
    title: {
      type: String,
      required: true,
      trim: true,
    },
    description: {
      type: String,
      required: true,
    },
    severity: {
      type: String,
      enum: ['low', 'moderate', 'high', 'critical'],
      required: true,
    },
    packageName: {
      type: String,
      required: true,
      trim: true,
    },
    affectedVersions: {
      type: String,
      required: true,
      trim: true,
    },
    fixedIn: {
      type: String,
      trim: true,
    },
    cwe: [
      {
        type: String,
        trim: true,
      },
    ],
    cvss: {
      type: Number,
    },
  },
  {
    timestamps: true,
  }
);

// Create an index for package name for fast lookups
VulnerabilitySchema.index({ packageName: 1 });

// Create an index for severity for filtering
VulnerabilitySchema.index({ severity: 1 });

export const Vulnerability = mongoose.model<IVulnerability>(
  'Vulnerability',
  VulnerabilitySchema
);
